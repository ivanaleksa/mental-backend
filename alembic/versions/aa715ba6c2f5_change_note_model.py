"""Change note model

Revision ID: aa715ba6c2f5
Revises: 3dfee36f3dba
Create Date: 2025-05-08 11:22:10.112015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import ENUM, ARRAY
from app.db.enums import EmotionsEnum

# revision identifiers, used by Alembic.
revision: str = 'aa715ba6c2f5'
down_revision: Union[str, None] = '3dfee36f3dba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('notes', 'createdAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('notes', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column(
        'notes',
        'emotions',
        existing_type=ENUM(EmotionsEnum, name="emotions", create_type=False),
        type_=ARRAY(ENUM(EmotionsEnum, name="emotions", create_type=False)),
        postgresql_using='CASE WHEN emotions IS NOT NULL THEN ARRAY[emotions] ELSE NULL END'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('notes', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('notes', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column(
        'notes',
        'emotions',
        existing_type=ARRAY(ENUM(EmotionsEnum, name="emotions", create_type=False)),
        type_=ENUM(EmotionsEnum, name="emotions", create_type=False),
        postgresql_using='emotions[1]'
    )
    # ### end Alembic commands ###
